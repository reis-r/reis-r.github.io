<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>FÃ´rÃ§a Bruta!</title><link href="https://reis-r.github.io/" rel="alternate"></link><link href="https://reis-r.github.io/feeds/all.atom.xml" rel="self"></link><id>https://reis-r.github.io/</id><updated>2020-02-18T19:46:35-03:00</updated><entry><title>Happy 2020!</title><link href="https://reis-r.github.io/happy-2020.html" rel="alternate"></link><published>2020-02-18T19:46:35-03:00</published><updated>2020-02-18T19:46:35-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2020-02-18:/happy-2020.html</id><summary type="html">
      &lt;p&gt;I just wanted to say Happy New Year to the internet before it's just too late to do so!ðŸ¤¡&lt;/p&gt;
      &lt;p&gt;Actually, I've been pretty busy, with new job and moving to another town. But I'm fine and the sun is shinning brighter for me every day. I've been doing all sort â€¦&lt;/p&gt;</summary><content type="html">
      &lt;p&gt;I just wanted to say Happy New Year to the internet before it's just too late to do so!ðŸ¤¡&lt;/p&gt;
      &lt;p&gt;Actually, I've been pretty busy, with new job and moving to another town. But I'm fine and the sun is shinning brighter for me every day. I've been doing all sort of things but I don't have a project worth talking about. I completed some &lt;a href="https://cognitiveclass.ai/"&gt;IBM Cognitive Class&lt;/a&gt; courses (you can see my badges &lt;a href="https://www.youracclaim.com/badges/10cf39d5-8a2f-45db-8f76-5b288e233a04/linked_in_profile"&gt;clicking here&lt;/a&gt;!).&lt;/p&gt;
      &lt;p&gt;I'm now focusing on the MOC "&lt;a href="https://www.udacity.com/course/data-wrangling-with-mongodb--ud032"&gt;Data Wrangling with MongoDB&lt;/a&gt;" as "main goal". I still playing with lisp on my "free" off-line time, doing some basic CL exercises from Norvig's book &lt;a href="https://github.com/norvig/paip-lisp"&gt;Paradigms of Artificial Intelligence Programming&lt;/a&gt;, but I just bought Mark Watson's &lt;a href="https://leanpub.com/hy-lisp-python"&gt;new book on the Hy language&lt;/a&gt; and will go with it for now on, it looks really amazing.&lt;/p&gt;
      &lt;p&gt;So this is it, the year really started, as some say, "LIT"!&lt;/p&gt;
    </content><category term="misc"></category><category term="meta"></category><category term="personal"></category></entry><entry><title>League in numbers (2019)</title><link href="https://reis-r.github.io/league-in-numbers-2019.html" rel="alternate"></link><published>2019-11-26T12:06:00-03:00</published><updated>2019-11-26T12:06:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-11-26:/league-in-numbers-2019.html</id><content type="html">
      &lt;p&gt;&lt;a href="https://www.twitch.tv/boicolorido"&gt;I started streaming me doing my homework project&lt;/a&gt;, and this is the result: &lt;a href="https://app.powerbi.com/view?r=eyJrIjoiNjRiYjJjZWEtOGE1OC00MzM2LWFhNWUtYjU1NWQyYWVmY2NkIiwidCI6IjEyYjlhNTNlLTcwYWQtNDQzOC1hY2UzLWE4YjE2ZGM5OGZmYyIsImMiOjh9"&gt;it's a dashboard of the pro League of Legends games in 2019&lt;/a&gt;.
        &lt;br&gt;
      &lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;This is still a work in progress&lt;/strong&gt;. I may update it.&lt;/p&gt;
    </content><category term="misc"></category></entry><entry><title>My Twitch channel</title><link href="https://reis-r.github.io/my-twitch-channel.html" rel="alternate"></link><published>2019-11-19T22:28:00-03:00</published><updated>2019-11-19T22:28:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-11-19:/my-twitch-channel.html</id><summary type="html">
      &lt;p&gt;Hello, I have been busy. I created a Twitch channel so I could stream my games (mostly League of Legends, PUBG...). It's on portuguese but if you interact in english I may reply with no problem. If I get confident about it I may even do a talk show about â€¦&lt;/p&gt;</summary><content type="html">
      &lt;p&gt;Hello, I have been busy. I created a Twitch channel so I could stream my games (mostly League of Legends, PUBG...). It's on portuguese but if you interact in english I may reply with no problem. If I get confident about it I may even do a talk show about computer and data science stuff instead of gaming. Anyway, the link to the stream is https://www.twitch.tv/boicolorido&lt;/p&gt;
    </content><category term="misc"></category><category term="meta"></category><category term="personal"></category><category term="twitch"></category><category term="streaming"></category><category term="content"></category><category term="gaming"></category><category term="league"></category></entry><entry><title>Mixing Clojure and Data Science</title><link href="https://reis-r.github.io/mixing-clojure-and-data-science.html" rel="alternate"></link><published>2019-09-18T16:49:00-03:00</published><updated>2019-09-18T16:49:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-09-18:/mixing-clojure-and-data-science.html</id><summary type="html">
      &lt;p&gt;I finally started learning some Clojure. I must say, it's a really good language to work on, and perfect if you need to do things in parallel (like matrix operations). I tried out some data science capabilities on it, and it's very doable.&lt;/p&gt;
      &lt;!-- &lt;h1&gt;Some Machine learning&lt;/h1&gt; --&gt;
      &lt;p&gt;
        You can use machine learning algorithms in â€¦&lt;/p&gt;</summary><content type="html">
      &lt;p&gt;I finally started learning some Clojure. I must say, it's a really good language to work on, and perfect if you need to do things in parallel (like matrix operations). I tried out some data science capabilities on it, and it's very doable.&lt;/p&gt;
      &lt;!-- &lt;h1&gt;Some Machine learning&lt;/h1&gt; --&gt;
      &lt;p&gt;
        You can use machine learning algorithms in any language, really. In a lisp you can get creative with stuff like macros and all the flexibility it offers. In Clojure the sky isn't really the limit. The way it handles concurrency and data structures is just amazing, and complex too, but the language lets you handle it very easily. &lt;strong&gt;Numbers are arbitrarily precise&lt;/strong&gt;! When I realised that, I just went mad in love with Clojure: it uses the concept of number pile from Scheme, no more floating-point nonsense.&lt;/p&gt;&lt;p&gt; I triend doing Naive Bayes and K-means from scratch and it wasn't too difficult (at least with the dataset I was using). If you really want to just throw data into something to get results back you can always use the great &lt;a href="https://www.cs.waikato.ac.nz/ml/weka/"&gt;WEKA&lt;/a&gt; machine learning software, &lt;a href="http://clj-ml.artifice.cc/doc/index.html"&gt;Clj-ml&lt;/a&gt; has an interface for it. There is also &lt;a href="https://mxnet.apache.org"&gt;MXNet&lt;/a&gt; for deep learning and &lt;a href="https://github.com/dakrone/clojure-opennlp"&gt;clojure-opennlp&lt;/a&gt; as interface to OpenNLP and &lt;a href="https://github.com/Bridgei2i/clojure-word2vec"&gt;clojure-word2vec&lt;/a&gt; as a wrapper around a Java implementation of Word2Vec.
      &lt;/p&gt;
      &lt;!-- &lt;h1&gt;Statistical computing and visualization&lt;/h1&gt; --&gt;
      &lt;p&gt;
        &lt;a href="http://incanter.org"&gt;Incanter&lt;/a&gt; has statistical computing and some visualisation functions. Matrix, linear algebra functions... pretty much everything R does you can do with it. I personally didn't had much fun with it &lt;strong&gt;yet&lt;/strong&gt; (my bad!).
      &lt;/p&gt;
      &lt;!-- &lt;h1&gt;What about the enviroment?&lt;/h1&gt; --&gt;
      &lt;p&gt;
        I don't think it's super easy to do data science with Clojure, but not impossible and very rewarding. If I were to build a large long-running super critical scalable system that uses ML and I had to choose, I would do it in Clojure. But for most EDA, prototyping and simpler stuff, I'd stick with Python, at least for now that I'm an apprentice of The Arts. In fact, that's what I plan to do next, focusing in learning the algorithms rather than just playing around with the tools. Time to get serious! :-P
      &lt;/p&gt;
      &lt;h1&gt;Useful resources to look for&lt;/h1&gt;
      &lt;p&gt;There are two books that helped (and will help, hopefully) me a lot with this:
        &lt;ul&gt;
          &lt;li&gt;&lt;i&gt;Clojure Data Analysis Cookbook&lt;/i&gt;, by ROCHESTER, Eric. 2015.&lt;/li&gt;
          &lt;li&gt;&lt;i&gt;Clojure for Machine Learning&lt;/i&gt;, by WALY, Akhil. 2014.&lt;/li&gt;
        &lt;/ul&gt;
        With these two books (and some previous Clojure knowedge, of course), you are pretty much ready to do data science with clojure.
      &lt;/p&gt;
    </content><category term="clojure"></category><category term="clojure"></category><category term="data science"></category><category term="programming"></category></entry><entry><title>Into Python programming</title><link href="https://reis-r.github.io/into-python-programming.html" rel="alternate"></link><published>2019-08-14T22:28:00-03:00</published><updated>2019-08-14T22:28:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-08-14:/into-python-programming.html</id><summary type="html">
      &lt;p&gt;
	I recently started programming in Python as part of my postgraduate in Business Intelligence and Data Science. I heard a lot about how the guy who created Python hates functional programming, and &lt;a href="https://www.artima.com/weblogs/viewpost.jsp?thread=98196"&gt;can't understand how a reduction works&lt;/a&gt;. Even &lt;a href="http://xahlee.info/python/python_3000.html"&gt;lambdas are broken&lt;/a&gt; in Python. This is very dull, and basically â€¦&lt;/p&gt;</summary><content type="html">
      &lt;p&gt;
	I recently started programming in Python as part of my postgraduate in Business Intelligence and Data Science. I heard a lot about how the guy who created Python hates functional programming, and &lt;a href="https://www.artima.com/weblogs/viewpost.jsp?thread=98196"&gt;can't understand how a reduction works&lt;/a&gt;. Even &lt;a href="http://xahlee.info/python/python_3000.html"&gt;lambdas are broken&lt;/a&gt; in Python. This is very dull, and basically why I kept myself far away from Python despite it's popularity.
      &lt;/p&gt;
      &lt;h2&gt;Surviving the snake bite&lt;/h2&gt;
      &lt;p&gt;
	In the Python Programming for Data Science module I had to learn... Well, Python. I gladly accepted the challenge. After years trying to figure &lt;a href="https://mitpress.mit.edu/sites/default/files/sicp/index.html"&gt;SICP&lt;/a&gt; out, I found my zen regarding programming languages: "&lt;i&gt;If it has closures, I can do it&lt;/i&gt;". We used &lt;a href="https://www.goodreads.com/book/show/25407018-data-science-from-scratch"&gt;Data Science From Scratch&lt;/a&gt; as textbook and we had to implement the first chapter of the book (&lt;a href="https://www.oreilly.com/library/view/data-science-from/9781492041122/ch01.html"&gt;which is available for free&lt;/a&gt;) as a nice warm-up to the language. After doing the exercises I implemented a &lt;a href="https://telegram.me/delirious_woolf_bot"&gt;Markov Chain chat-bot for Telegram&lt;/a&gt; in Python (source code for that can be found &lt;a href="https://github.com/reis-r/markov-example"&gt;here&lt;/a&gt;). I already had something like that running on JavaScript so it was more a matter of getting Python's syntax than the algorithm itself (which is pretty naive).
      &lt;/p&gt;
      &lt;p&gt;
	I'm by no means a Lisp Warlock, but I like the syntactic simplicity and general idea of this family of languages. As &lt;a href="https://norvig.com/python-lisp.html"&gt;Norvig points out&lt;/a&gt;, Python has indeed some "Lisp elements", and from the experience I had the main one is simplicity. Well, if you ignore baroque and ugly special forms (or should I say, syntactic sugar) like "list comprehensions" and the weird "for loop" nestings Joel Grus presents in his book.
      &lt;/p&gt;
      &lt;h2&gt;My humble antivenom&lt;/h2&gt;
      &lt;p&gt;
	The first thing I noticed is that function composition in Python is ugly. I do a lot of function composition on my code because generally collection functions (which uses dot notation) mutates data, so you have to use the "standalone version" of them, like in using &lt;code&gt;sorted()&lt;/code&gt; instead of &lt;code&gt;list.sort()&lt;/code&gt;. To solve the function composition problem I used a slightly modified version of &lt;a href="https://mathieularose.com/function-composition-in-python/"&gt;Mathieu Larose's &lt;code&gt;compose()&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;def compose(*functions: Callable) -&gt; Callable:&lt;br&gt;
    ... ''Makes function composition more readable'''&lt;br&gt;
    ... return reduce(lambda g, f: lambda x: f(g(x)), functions, lambda x: x)&lt;/code&gt;&lt;/p&gt;
      &lt;p&gt;
	Notice that I changed the position of &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;g&lt;/code&gt; in the first (from left to right) lambda. That way you got to read from top to bottom, not bottom up. One other thing to notice is the type hints, type hints are our friends. With that, I was able to build long "pipelines" without affecting readability. One thing I noticed is that I started to use this pattern in function definitions, combining composition and application of some argument like &lt;code&gt;compose(...some_functions...)(some_argument)&lt;/code&gt;. For sake of even more peace of mind when thinking about solving problems rather than carrying a couple variables around, I created a &lt;code&gt;piped()&lt;/code&gt; function: the first argument is something that will applied to the composition of the functions that will be passed in the next arguments:
      &lt;/p&gt;
      &lt;p&gt;&lt;code&gt;def piped(obj: Any, *functions: Callable) -&gt; Any:&lt;br&gt;
... '''Applies some object into a function composition'''&lt;br&gt;
	  ... return compose(*functions)(obj)&lt;/code&gt;&lt;/p&gt;
      &lt;p&gt;Now I can create cool functions from other functions like this one right here:
      &lt;p&gt;&lt;code&gt;
	def next_word(words: Tuple[WordListNode], word: str) -&gt; str:&lt;br&gt;
...        '''Searches for the index of the next element of every occurrence of word'''&lt;br&gt;
...        return piped(&lt;br&gt;
.......            words,&lt;br&gt;
.......            # get all occurrences&lt;br&gt;
.......            partial(filter, lambda node: node_word(node) == word),&lt;br&gt;
.......            # get all possible outcomes&lt;br&gt;
.......            partial(map, next_node_index),&lt;br&gt;
.......            # make it a tuple&lt;br&gt;
.......            tuple,&lt;br&gt;
.......            # choose the next state&lt;br&gt;
.......            lambda e: choice(e) if e else -1,&lt;br&gt;
.......            # get the chosen node&lt;br&gt;
.......            partial(node_by_index, words),&lt;br&gt;
.......            # get the word&lt;br&gt;
.......            node_word&lt;br&gt;
...        )
      &lt;/code&gt;&lt;/p&gt;
      &lt;p&gt;I know this is not the "Pythonic" way to do stuff or whatever, I'm not a basic bitch. It works, it's quite readable and right to the point. I think maybe other people may find this interesting too. What I really hope is that I'll someday find some better solution for this.&lt;/p&gt;
      &lt;h2&gt;Why Python is cool&lt;/h2&gt;
      &lt;p&gt;
	Python is survivable. It's not bad at all. It's definitely easy to learn, maybe a good choice to work in teams. I wonder if that's why it got so popular in the Data Science realm. It also has a really huge community and, because of that, great libraries that manage to do a lot. I feel confident reading and developing Python code now, I definitely would accept working with Python. Nevertheless, I don't think I'll use it on any of my future toy projects as I have a little more joy using other languages (or just learning new ones for that matter). I may be giving Clojure a try soon, it looks quite interesting.
      &lt;/p&gt;
    </content><category term="python"></category><category term="python"></category><category term="programming"></category></entry><entry><title>Configuring the DVORAK International with dead keys AND DVORAK keyboards on X11</title><link href="https://reis-r.github.io/configuring-the-dvorak-international-with-dead-keys-and-dvorak-keyboards-on-x11.html" rel="alternate"></link><published>2019-07-27T22:28:00-03:00</published><updated>2019-07-27T22:28:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-07-27:/configuring-the-dvorak-international-with-dead-keys-and-dvorak-keyboards-on-x11.html</id><summary type="html">
    &lt;p&gt;
      I have been using the &lt;a href="https://www.dvorak-keyboard.com"&gt;DVORAK&lt;/a&gt; keyboard layout for years, and I'm really glad I did it, because it forced me to learn how to properly type. The problem comes when you want to input diacritics used in some languages (things like "Ãº" and "Ãµ"). My usual setup was: using â€¦&lt;/p&gt;</summary><content type="html">
    &lt;p&gt;
      I have been using the &lt;a href="https://www.dvorak-keyboard.com"&gt;DVORAK&lt;/a&gt; keyboard layout for years, and I'm really glad I did it, because it forced me to learn how to properly type. The problem comes when you want to input diacritics used in some languages (things like "Ãº" and "Ãµ"). My usual setup was: using setxkbmap to turn on the DVORAK keyboard and using something like &lt;a href=""&gt;SCIM&lt;/a&gt;/&lt;a href="https://en.wikipedia.org/wiki/Intelligent_Input_Bus"&gt;iBus&lt;/a&gt; to activate the "latin-pre" input method to suit my special characters needs. This seems like overkill and I was searching for an alternative.&lt;/p&gt;
    &lt;p&gt;It turns out that &lt;a href="https://xfce.org"&gt;XFCE&lt;/a&gt; does change between keyboard layouts and has DVORAK and a DVORAK international keyboard with dead keys, and with no special input method needed at all. I was curious about how this happens (probably some X11 "system-agnostic" configuration) and wanted to make whatever this is to work on &lt;a href="https://xmonad.org/download.html"&gt;xmonad&lt;/a&gt;. After a quick search at my ".config" folder I found a "keyboard-layout.xml" file with all the keyboard configuration.&lt;/p&gt;
    &lt;p&gt; This is definitely what I was looking for. If you man setxkbmap, you see that there is a correspondence between the properties on the XML and the options for setxkbmap. So my setxkbmap command now looks like: &lt;code&gt;setxkbmap -layout dvorak,us -variant ,dvorak-intl -option grp:alt_space_toggle&lt;/code&gt; and I can simply switch between DVORAK and DVORAK international using &lt;kbd&gt;Alt + Space&lt;/kbd&gt;!
    &lt;/p&gt;
  </content><category term="misc"></category><category term="tips"></category><category term="x11"></category><category term="dvorak"></category><category term="ergonomy"></category><category term="configuration"></category><category term="xorg"></category></entry><entry><title>Hello, World!</title><link href="https://reis-r.github.io/hello-world.html" rel="alternate"></link><published>2019-06-27T22:28:00-03:00</published><updated>2019-06-27T22:28:00-03:00</updated><author><name>Rony Reis</name></author><id>tag:reis-r.github.io,2019-06-27:/hello-world.html</id><summary type="html">
      &lt;p&gt;After a lot of thinking, I decided to start writing a blog. I wanted a place to experiment and show what I'm up to lately, and maybe the information I put here will help other people to solve their own problems.&lt;/p&gt;
      &lt;p&gt;I'm currently getting a graduate degree in Business Intelligence â€¦&lt;/p&gt;</summary><content type="html">
      &lt;p&gt;After a lot of thinking, I decided to start writing a blog. I wanted a place to experiment and show what I'm up to lately, and maybe the information I put here will help other people to solve their own problems.&lt;/p&gt;
      &lt;p&gt;I'm currently getting a graduate degree in Business Intelligence and Data Science so I will probably have something to share from time to time. Also, my native language isn't English, so this could be a really good way to practice. I do some weird stuff with &lt;a href="https://www.gnu.org/software/emacs/"&gt;GNU Emacs&lt;/a&gt;, and &lt;a href="https://www.dragonflybsd.org/"&gt;DragonFly BSD&lt;/a&gt;, and also some JavaScript programming so you might expect some content about that too.&lt;/p&gt;
    </content><category term="misc"></category><category term="meta"></category><category term="introduction"></category><category term="personal"></category></entry></feed>